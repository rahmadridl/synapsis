import DataTypes from "sequelize";
import db from "../Config/config.js";

const attributes = {
  id: {
    type: DataTypes.INTEGER,
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: true,
    field: "id",
    autoIncrement: true,
  },
  email: {
    type: DataTypes.CHAR(100),
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "email",
    autoIncrement: false,
    unique: true,
  },
  password: {
    type: DataTypes.CHAR(100),
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "password",
    autoIncrement: false,
  },
  token_notif: {
    type: DataTypes.CHAR(250),
    allowNull: true,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "token_notif",
    autoIncrement: false,
  },
  name: {
    type: DataTypes.CHAR(100),
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "name",
    autoIncrement: false,
  },
  role: {
    type: DataTypes.INTEGER,
    allowNull: false,
    defaultValue: 2,
    comment: null,
    primaryKey: false,
    field: "role",
    autoIncrement: false,
  },
  status: {
    type: DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "status",
    autoIncrement: false,
  },
  clinic_id: {
    type: DataTypes.INTEGER,
    allowNull: true,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "clinic_id",
    autoIncrement: false,
  },
  phone: {
    type: DataTypes.STRING(25),
    allowNull: false,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "phone",
    autoIncrement: false,
    unique: true,
  },
  token: {
    type: DataTypes.TEXT,
    allowNull: true,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "token",
    autoIncrement: false,
  },
  last_login: {
    type: DataTypes.DATE,
    allowNull: true,
    defaultValue: new Date(Date.now()),
    comment: null,
    primaryKey: false,
    field: "last_login",
    autoIncrement: false,
  },
  created_at: {
    type: DataTypes.DATE,
    allowNull: true,
    defaultValue: new Date(Date.now()),
    comment: null,
    primaryKey: false,
    field: "created_at",
    autoIncrement: false,
  },
  updated_at: {
    type: DataTypes.DATE,
    allowNull: true,
    defaultValue: new Date(Date.now()),
    comment: null,
    primaryKey: false,
    field: "updated_at",
    autoIncrement: false,
  },
  deleted_at: {
    type: DataTypes.DATE,
    allowNull: true,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "deleted_at",
    autoIncrement: false,
  },
  foto: {
    type: DataTypes.TEXT,
    allowNull: true,
    defaultValue: null,
    comment: null,
    primaryKey: false,
    field: "foto",
    autoIncrement: false,
  },
};
const options = {
  freezeTableName: true,
  timestamps: false,
  tableName: "m_user",
  comment: "",
  indexes: [],
};
const MUserModel = db.define("m_user", attributes, options);
export default MUserModel;
// };
